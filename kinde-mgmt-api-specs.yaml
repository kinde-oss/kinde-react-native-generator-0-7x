openapi: 3.0.0
info:
  version: 1.2.3
  title: Kinde Management API
  description: Provides endpoints to manage your Kinde Businesses
  termsOfService: https://kinde.com/docs/important-information/terms-of-service
  contact:
    name: Kinde Support Team
    email: support@kinde.com
    url: https://kinde.com/docs
servers:
  - url: https://{businessName}.kinde.com/api/v1
    variables:
      businessName:
        description: Business Name created in the Kinde Console
        default: true
security:
  - kindeBearerAuth: []
tags:
  - name: Users
    description: Everything about your end-users
paths:
  /oauth2/user_profile:
    get:
      tags:
        - OAuth
      operationId: getUser
      description: |
        Contains the id, names and email of the currently logged in user
      summary: Returns the details of the currently logged in user
      responses:
        200:
          description: A succesful response with the user details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_profile"
        403:
          description: invalid_credentials
    servers:
      - url: https://your_kinde_domain.kinde.com
  /oauth2/v2/user_profile:
    get:
      tags:
        - OAuth
      operationId: getUserProfileV2
      description: |
        Contains the id, names and email of the currently logged in user
      summary: Returns the details of the currently logged in user
      responses:
        200:
          description: A succesful response with the user details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_profile_v2"
        403:
          description: invalid_credentials
    servers:
      - url: https://your_kinde_domain.kinde.com
  /users:
    get:
      tags:
        - Users
      operationId: getUsers
      description: |
        The returned list can be sorted by full name or email address
        in ascending or descending order. The number of records to return at a time can also be controlled using the page_size query
        string parameter.
      summary: Returns a paginated list of end-user records for a business
      parameters:
        - name: sort
          in: query
          description: Describes the field and order to sort the result by
          schema:
            type: string
            nullable: true
            enum: [name_asc, name_desc, email_asc, email_desc]
        - name: page_size
          in: query
          description: The number of items to return
          schema:
            type: integer
            nullable: true
        - name: user_id
          in: query
          description: The id of the user to filter by
          schema:
            type: integer
            nullable: true
        - name: next_token
          in: query
          description: A string to get the next page of results if there are more results
          schema:
            type: string
            nullable: true
      responses:
        200:
          description: A succesful response with a list of users or an empty list
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/users"
                  next_token:
                    type: string
        403:
          description: invalid_credentials
  /user:
    post:
      tags:
        - users
      operationId: createUser
      description: |
        Creates a user record and optionally zero or more identities for the user. An example identity could be the email
        address of the user
      summary: Creates a user record
      requestBody:
        description: The details of the user to create
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    given_name:
                      type: string
                    family_name:
                      type: string
                identities:
                  type: array
                  items:
                    type: object
                    properties:
                      "type":
                        type: string
                      details:
                        type: object
                        properties:
                          email:
                            type: string
      responses:
        "200":
          description: Successfully created a new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  created:
                    type: boolean
                  identities:
                    type: array
                    items:
                      $ref: "#/components/schemas/user_identity"
components:
  schemas:
    users:
      type: array
      items:
        $ref: "#/components/schemas/user"
    next_token:
      type: string
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        full_name:
          type: string
        last_name:
          type: string
        first_name:
          type: string
        is_suspended:
          type: boolean
    user_profile:
      type: object
      properties:
        id:
          type: string
        preferred_email:
          type: string
        provided_id:
          type: string
        last_name:
          type: string
        first_name:
          type: string
    user_identity:
      type: object
      properties:
        "type":
          type: string
        result:
          type: object
          properties:
            created:
              type: boolean
            identity_id:
              type: integer
    user_profile_v2:
      type: object
      properties:
        id:
          type: string
        provided_id:
          type: string
        name:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        updated_at:
          type: string
  securitySchemes:
    kindeBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
